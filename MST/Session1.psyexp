<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.10">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1504, 1003]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="CombinedMST" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="Study">
      <TextComponent name="Question">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Question" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="What is this sound?&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="ResponseBox">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="black" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="ResponseBox" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <MouseComponent name="SubmitClick">
        <Param name="clickable" updates="constant" val="Submit" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="SubmitClick" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <TextComponent name="ClickTheButton">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="ClickTheButton" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.03)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Click 'Submit' to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="SoundItem">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SoundItem" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundFiles3" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1.1" valType="code"/>
      </SoundComponent>
      <TextComponent name="ItemNo">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ItemNo" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.45)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$number" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="FinishTrial">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="#if trials.thisN == 2: # i.e. trials 0, 1, 2 have been completed&amp;#10; #   trials.finished = True # end the loop early&amp;#10; &amp;#10;&amp;#10;#if count == 60:&amp;#10;#    trials.finished = True&amp;#10;#    #trials.status = PsychoJS.Status.FINISHED" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="FinishTrial" valType="code"/>
      </CodeComponent>
      <TextboxComponent name="Submit">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="False" valType="bool"/>
        <Param name="fillColor" updates="constant" val="None" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="Submit" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.15, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Submit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
    </Routine>
    <Routine name="Count2">
      <TextComponent name="no2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="no2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="Sound_trialcount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="count += 1;&amp;#10;number = (count.toString() + &quot;/128&quot;);&amp;#10;NoSoundOn = 0;&amp;#10;if (((count === 45) || (count === 82))) {&amp;#10;    NoSoundOn = 1;&amp;#10;} else {&amp;#10;    NoSoundOn = 0;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="count += 1&amp;#10;number = str(count) + &quot;/128&quot;&amp;#10;NoSoundOn = 0&amp;#10;if count == 45 or count == 82:&amp;#10;    NoSoundOn = 1&amp;#10;else:&amp;#10;    NoSoundOn = 0" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Sound_trialcount" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Count3">
      <TextComponent name="Cross1Sec">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Cross1Sec" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Count1">
      <CodeComponent name="Word_trialcount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="count += 1;&amp;#10;number = (count.toString() + &quot;/100&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="count += 1&amp;#10;number = str(count) + &quot;/100&quot;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Word_trialcount" valType="code"/>
      </CodeComponent>
      <TextComponent name="no_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="no_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Welcome">
      <TextComponent name="InstructionTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="InstructionTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome to the experiment&amp;#10;&amp;#10;&amp;#10;&amp;#10;This experiment involves audio stimuli and requires you to wear headphones. Before we begin, please make sure that you're in a quiet listening environment, that you are wearing headphones, and that your volume is turned on.&amp;#10;&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="WelcomeContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="WelcomeContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="WelcomContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="VolumeAdjustment">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please adjust your volume to a comfortable level.&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="Music">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Music" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="volumeadjust.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="0.3" valType="code"/>
      </SoundComponent>
      <KeyboardComponent name="EndAdjustment">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndAdjustment" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="AdjustContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AdjustContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE when you are ready to begin the task" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Start">
      <TextComponent name="StartTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="StartTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great job! This is the end of the practice.&amp;#10;&amp;#10;&amp;#10;We will now begin the actual task. There are 100 sound files in total. The words from the practice are not part of the actual task. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="StartKey">
        <Param name="allowedKeys" updates="constant" val="'space' " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="StartKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="ContinueStart">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueStart" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin the task" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="SelectCondition">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="count = 0&amp;#10;condition = &quot;0:100&quot;;&amp;#10;c = Math.floor(Math.random() * 6);&amp;#10;if ((c === 0)) {&amp;#10;    condition = &quot;0:100&quot;;&amp;#10;} else {&amp;#10;    if ((c === 1)) {&amp;#10;        condition = &quot;100:200&quot;;&amp;#10;    } else {&amp;#10;        if ((c === 2)) {&amp;#10;            condition = &quot;200:300&quot;;&amp;#10;        } else {&amp;#10;            if ((c === 3)) {&amp;#10;                condition = &quot;300:400&quot;;&amp;#10;            } else {&amp;#10;                if ((c === 4)) {&amp;#10;                    condition = &quot;400:500&quot;;&amp;#10;                } else {&amp;#10;                    if ((c === 5)) {&amp;#10;                        condition = &quot;500:600&quot;;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="count = 0&amp;#10;condition = &quot;0:100&quot;&amp;#10;import random&amp;#10;c = random.randint(0, 6)&amp;#10;if c == 0:&amp;#10;    condition = &quot;0:100&quot;&amp;#10;elif c == 1:&amp;#10;    condition = &quot;100:200&quot;&amp;#10;elif c == 2:&amp;#10;    condition = &quot;200:300&quot;&amp;#10;elif c == 3:&amp;#10;    condition = &quot;300:400&quot;&amp;#10;elif c == 4:&amp;#10;    condition = &quot;400:500&quot;&amp;#10;elif c == 5:&amp;#10;    condition = &quot;500:600&quot;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="SelectCondition" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="End">
      <TextComponent name="ThankyouMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ThankyouMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is the end of the experiment.&amp;#10;&amp;#10;Thank you for your participation!&amp;#10;&amp;#10;&amp;#10;Your Completion Code is" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="CompletionCode">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="True" valType="bool"/>
        <Param name="borderColor" updates="constant" val="Black" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="Black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="False" valType="bool"/>
        <Param name="fillColor" updates="constant" val="White" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="CompletionCode" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.07)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="51DF249E" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <KeyboardComponent name="ExitKey">
        <Param name="allowedKeys" updates="constant" val="'return', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ExitKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="CodeTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="CodeTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please write the code down so you can enter it when you return to Prolific. You may then exit the study by pressing ENTER." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="Feedbackbox">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Times New Roman" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="Feedbackbox" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 0.07)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val=" &amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="FeedbackPrompt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Times New Roman" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="FeedbackPrompt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please feel free to leave any comment or feedback on the study (Was there any technical issue? Any instruction that was unclear? etc.)." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="StartAdjustment">
      <TextComponent name="VolumeBeginTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="VolumeBeginTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will begin with a quick volume calibration and headphone check. &amp;#10;&amp;#10;First, we will play some music to make sure that your sound volume is at a comfortable level.&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to begin the volume calibration &amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="VolumeContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="VolumeContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MST">
      <TextComponent name="MSTQuestion">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTQuestion" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = OLD       2 = NEW&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Welcome1">
      <KeyboardComponent name="Welcome1Continue">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome1Continue" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="Task1Slide">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Task 1.jpg" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Task1Slide" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.7, 0.9)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="PracticeBegin">
      <TextComponent name="InstructionTxt2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="InstructionTxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will begin with a few practice trials to familiarize you with the task. During the practice, we will give you the correct answer.&amp;#10;&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="WelcomeContinue2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeContinue2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin practice&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="WelcomeContinueKey2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="WelcomeContinueKey2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="PracticeText2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="PracticeText2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Let's start with some practice" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Practice1">
      <CodeComponent name="WordPractice_trialcount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="WTcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="WTcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="WTcount += 1;&amp;#10;WTrialCount = (&quot;Trial &quot; + WTcount.toString());&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="WTcount += 1&amp;#10;WTrialCount = 'Trial ' + str(WTcount)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="WordPractice_trialcount" valType="code"/>
      </CodeComponent>
      <TextComponent name="TrialNumber">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrialNumber" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$WTrialCount" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="PracticeSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PracticeSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="PracticeCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="PracticeCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PracticeRespKey2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PracticeRespKey2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="PracticeFeedback">
      <CodeComponent name="FeedbackMessage">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((Type === &quot;NEW&quot;)) {&amp;#10;    message = &quot;This is a NEW word. \nThis is your first time hearing this word.&quot;;&amp;#10;} else {&amp;#10;    if ((Type === &quot;SIMILAR&quot;)) {&amp;#10;        message = &quot;This is a NEW word. \nNote that this one sounds similar to the previous word but is not exactly the same.&quot;;&amp;#10;    } else {&amp;#10;        if ((Type === &quot;OLD&quot;)) {&amp;#10;            message = &quot;This is an OLD word. \nThis word is exactly the same as the first word.&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#Tcount += 1&amp;#10;#TrialCount = 'Trial ' + str(Tcount)&amp;#10;if Type == 'NEW':&amp;#10;    message = &quot;This is a NEW word. \nThis is your first time hearing this word.&quot;&amp;#10;elif Type == 'SIMILAR':&amp;#10;    message = &quot;This is a NEW word. \nNote that this one sounds similar to the previous word but is not exactly the same.&quot;&amp;#10;elif Type == 'OLD':&amp;#10;    message = &quot;This is an OLD word. \nThis word is exactly the same as the first word.&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((Practice_resp.corr === 1)) {&amp;#10;    feedback = &quot;CORRECT&quot;;&amp;#10;} else {&amp;#10;    feedback = &quot;INCORRECT&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if Practice_resp.corr == 1:&amp;#10;    feedback = 'CORRECT'&amp;#10;else:&amp;#10;    feedback = 'INCORRECT'" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="FeedbackMessage" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="Practice_resp">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Practice_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="PracticeMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="PracticeMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$message" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="FeedbackCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="FeedbackCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Continue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Continue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press the correct number on your keyboard" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Options">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Options" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1 = OLD      2 = NEW" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="HeadphoneCheck">
      <TextComponent name="HeadphoneCheckBeing">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="HeadphoneCheckBeing" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next, we will do a short headphone check. Failure to meet the headphone requirement may cause your submission to be rejected.&amp;#10;&amp;#10;On each trial, you will hear three tones. One of these tones will be quieter than the others. You will identify whether the quiet tone occurred first, second, or third.&amp;#10;&amp;#10;There are six trials in total." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="HeadphoneContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="HeadphoneContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="HeadphoneContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="HeadphoneContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="HeadphonePlay">
      <SoundComponent name="CheckSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <CodeComponent name="Headphone_trialcount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="counter = 0&amp;#10;checkcount = str(counter) + &quot;/6&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="counter = 0;&amp;#10;checkcount = (counter.toString() + &quot;/6&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="counter += 1;&amp;#10;checkcount = (counter.toString() + &quot;/6&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="counter += 1&amp;#10;checkcount = str(counter) + &quot;/6&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((CheckResp.corr === 1)) {&amp;#10;    message = &quot;CORRECT&quot;;&amp;#10;} else {&amp;#10;    message = &quot;INCORRECT&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if CheckResp.corr == 1:&amp;#10;    message = &quot;CORRECT&quot;&amp;#10;else:&amp;#10;    message = &quot;INCORRECT&quot;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Headphone_trialcount" valType="code"/>
      </CodeComponent>
      <TextComponent name="QuestionTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="QuestionTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Which tone was the quietest?&amp;#10;(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = First  2 = Second  3 = Third" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="CheckTrial">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="CheckTrial" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$checkcount" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="CrossHeadphone">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="CrossHeadphone" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="CheckResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="HeadphoneFeedback">
      <TextComponent name="FeedbackTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FeedbackTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$message" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="PracticeFeedbackII">
      <TextComponent name="FeedbackMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FeedbackMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$feedback" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTWord">
      <SoundComponent name="TargetSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TargetSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="ItemNumber">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ItemNumber" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$number" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Option">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Option" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = OLD       2 = NEW" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MST_resp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$WordCorrect" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MST_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="Option2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Option2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Old or New?" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="SoundPractice">
      <CodeComponent name="Soundpractice_trialcount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="Tcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Tcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="Tcount += 1;&amp;#10;TrialCount = (&quot;Trial &quot; + Tcount.toString());&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="Tcount += 1&amp;#10;TrialCount = 'Trial ' + str(Tcount)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Soundpractice_trialcount" valType="code"/>
      </CodeComponent>
      <SoundComponent name="PracticeSound2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PracticeSound2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundMST_File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="PracticeCrossW">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="PracticeCrossW" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="PracticeTrialNo">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="PracticeTrialNo" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$TrialCount" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PracticeRespKey2II">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PracticeRespKey2II" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SoundPracticeFeedback">
      <CodeComponent name="Sound_feedbackmessage">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((SoundType === &quot;NEW&quot;)) {&amp;#10;    message = &quot;This is a NEW sound. \nThis is your first time hearing this sound.&quot;;&amp;#10;} else {&amp;#10;    if ((SoundType === &quot;SIMILAR&quot;)) {&amp;#10;        message = &quot;This is a NEW sound. \nNote that this one sounds similar to the previous sound but is not exactly the same.&quot;;&amp;#10;    } else {&amp;#10;        if ((SoundType === &quot;OLD&quot;)) {&amp;#10;            message = &quot;This is an OLD sound. \nThis sound is exactly the same as the first sound.&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if SoundType == 'NEW':&amp;#10;    message = &quot;This is a NEW sound. \nThis is your first time hearing this sound.&quot;&amp;#10;elif SoundType == 'SIMILAR':&amp;#10;    message = &quot;This is a NEW sound. \nNote that this one sounds similar to the previous sound but is not exactly the same.&quot;&amp;#10;elif SoundType == 'OLD':&amp;#10;    message = &quot;This is an OLD sound. \nThis sound is exactly the same as the first sound.&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((PracticeSoundKey.corr === 1)) {&amp;#10;    feedback = &quot;CORRECT&quot;;&amp;#10;} else {&amp;#10;    feedback = &quot;INCORRECT&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if PracticeSoundKey.corr == 1:&amp;#10;    feedback = 'CORRECT'&amp;#10;else:&amp;#10;    feedback = 'INCORRECT'" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Sound_feedbackmessage" valType="code"/>
      </CodeComponent>
      <TextComponent name="Message">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Message" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$message" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="OptionsW">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="OptionsW" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1 = OLD      2 = NEW" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="PracticeCrossW2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="PracticeCrossW2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="PracticeContinueW">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="PracticeContinueW" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press the correct number on your keyboard" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PracticeSoundKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$SoundCorrect" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PracticeSoundKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SoundPracticeFeedbackII">
      <TextComponent name="Feedbackmessage">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Feedbackmessage" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$feedback" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTSound">
      <TextComponent name="MSTSoundCount">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundCount" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$MSTSoundPlay.getDuration()+0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$number" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="MSTSoundPlay">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTSoundPlay" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundMST_File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="MSTSoundCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$MSTSoundPlay.getDuration()+0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTSoundResponse">
      <TextComponent name="MSTSoundOptions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundOptions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.4, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = OLD (The exact same sound has been played before)&amp;#10;&amp;#10;2 = NEW (This sound is being played for the first time)&amp;#10;&amp;#10;0 = NO SOUND" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTSoundNote">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundNote" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.4, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="*Sounds that are similar to but different from previously played sounds should also be labeled as NEW&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTSoundKey">
        <Param name="allowedKeys" updates="constant" val="'1','2', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$SoundCorrect" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTSoundKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="TextAlignLeft">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="//MSTSoundOptions.setAlignHoriz('left');&amp;#10;//MSTSoundNote.setAlignHoriz('left');" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#MSTSoundOptions.alignText='left'&amp;#10;#MSTSoundNote.alignText='left'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TextAlignLeft" valType="code"/>
      </CodeComponent>
      <TextComponent name="Options2II">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Options2II" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Old or New?" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTSoundStart">
      <CodeComponent name="Sound_selectcondition">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="count = 0&amp;#10;rows = &quot;5:133&quot;;&amp;#10;s = Math.floor(Math.random() * 1);&amp;#10;if ((s === 0)) {&amp;#10;    rows = &quot;5:133&quot;;&amp;#10;} else {&amp;#10;    if ((s === 1)) {&amp;#10;        rows = &quot;133:261&quot;;&amp;#10;    } else {&amp;#10;        if ((s === 2)) {&amp;#10;            rows = &quot;261:389&quot;;&amp;#10;        } else {&amp;#10;            if ((s === 3)) {&amp;#10;                rows = &quot;389:517&quot;;&amp;#10;            } else {&amp;#10;                if ((s === 4)) {&amp;#10;                    rows = &quot;517:645&quot;;&amp;#10;                } else {&amp;#10;                    if ((s === 5)) {&amp;#10;                        rows = &quot;645:773&quot;;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="count = 0&amp;#10;rows = &quot;5:133&quot;&amp;#10;import random&amp;#10;s = random.randint(0, 1)&amp;#10;if s == 0:&amp;#10;    rows = &quot;5:133&quot;&amp;#10;elif s == 1:&amp;#10;    rows = &quot;133:261&quot;&amp;#10;elif s == 2:&amp;#10;    rows = &quot;261:389&quot;&amp;#10;elif s == 3:&amp;#10;    rows = &quot;389:517&quot;&amp;#10;elif s == 4:&amp;#10;    rows = &quot;517:645&quot;&amp;#10;elif s == 5:&amp;#10;    rows = &quot;645:773&quot;&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Sound_selectcondition" valType="code"/>
      </CodeComponent>
      <TextComponent name="MSTSoundStrtMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundStrtMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great job! This is the end of the practice.&amp;#10;&amp;#10;&amp;#10;We will now begin the actual task. There are 128 sound files in total. The sounds from the practice are not part of the actual task. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTSoundStrt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTSoundStrt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTSoundStrtKey">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTSoundStrtKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="End1">
      <TextComponent name="EndMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="EndMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great job! This is the end of this component. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="End1Cont">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="End1Cont" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="End2">
      <TextComponent name="EndMssg2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="EndMssg2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is the end of the experiment.&amp;#10;&amp;#10;Thank you for your participation!&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to exit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="WelcomeSound2">
      <TextComponent name="WelcomeSound2Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeSound2Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Importantly, some of the sounds are similar but not identical. Pay close attention to each sound and only label one as &quot;OLD&quot; if it is EXACTLY THE SAME as a previously presented sound." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="WelcomeSound2Cont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeSound2Cont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="WelcomeSound2ContKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="WelcomeSound2ContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Tcount = 0;&amp;#10;TrialCount = (&quot;Trial &quot; + Tcount.toString());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="Tcount = 0&amp;#10;TrialCount = 'Trial ' + str(Tcount)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Welcome0">
      <CodeComponent name="code_10">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="run = 1" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="run = 1;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((run === 1)) {&amp;#10;    intromssg = &quot;This experiment has two parts, each lasting about 15 minutes. You may take a short break between the two tasks, but please do not exit the study until you finish all the components. \n\n\n\n\n\n\nPress SPACE to begin Part I&quot;;&amp;#10;} else {&amp;#10;    intromssg = &quot;Great job! This is the end of Part I. In Part II, you will perform the same task with a different type of sounds. \nYou may take a short break now if you wish. \n\n\n\n\n\n\nPress SPACE to begin Part II&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if run == 1:&amp;#10;    intromssg = &quot;This experiment has two parts, each lasting about 15 minutes. You may take a short break between the two tasks, but please do not exit the study until you finish all the components. \n\n\n\n\n\n\nPress SPACE to begin Part I&quot;&amp;#10;else:&amp;#10;    intromssg = &quot;Great job! This is the end of Part I. In Part II, you will perform the same task with a different type of sounds. \nYou may take a short break now if you wish. \n\n\n\n\n\n\nPress SPACE to begin Part II&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="run += 1;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="run += 1" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
      <TextComponent name="Welcome0Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Welcome0Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$intromssg" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="Welcome0ContKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome0ContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="NoSound">
      <TextComponent name="Pause">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Pause" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="NoSoundText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="NoSoundText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.4, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = OLD   (The EXACT SAME sound has been played before) &amp;#10;   &amp;#10;2 = NEW (This sound is being played for the first time)&amp;#10;&amp;#10;0 = NO SOUND" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="NoSoundNote">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="NoSoundNote" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.4, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="*Sounds that are similar to but different from previously played sounds should also be labeled as NEW" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="NoSoundResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '0', " valType="code"/>
        <Param name="correctAns" updates="constant" val="0" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="NoSoundResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="TextAlignLeft2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="NoSoundText.setAlignHoriz('left');&amp;#10;NoSoundNote.setAlignHoriz('left');&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="NoSoundText.alignText='left'&amp;#10;NoSoundNote.alignText='left'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TextAlignLeft2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="SimilarityPresentation">
      <CodeComponent name="SimTrialCount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="simcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="simcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="simcount += 1;&amp;#10;simcounter = (simcount.toString() + &quot;/83&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="simcount += 1&amp;#10;simcounter = str(simcount) + &quot;/83&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="SimTrialCount" valType="code"/>
      </CodeComponent>
      <SoundComponent name="FirstSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="FirstSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Sound1" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="SecondSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SecondSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Sound2" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$FirstSound.getDuration() + 1.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="Cross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Cross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$FirstSound.getDuration()" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="NumberOne">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="NumberOne" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$FirstSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Sound 1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="NumberTwo">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="NumberTwo" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$FirstSound.getDuration() + 1.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$SecondSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Sound 2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="SimTrialNumber">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SimTrialNumber" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$FirstSound.getDuration() + 1 + SecondSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$simcounter" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Welcome3">
      <ImageComponent name="Task3Slide">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Task 3.jpg" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Task3Slide" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.7, 0.9)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="Welcome3Continue">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome3Continue" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SimlarityResponse">
      <TextComponent name="SimilarityRatingScale">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SimilarityRatingScale" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1 ----------------- 2 ----------------- 3 ----------------- 4 &amp;#10;Different                                                   Same " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="SimilarityRatingKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SimilarityRatingKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SoundLabeling">
      <TextComponent name="SoundLabelQuestion">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="SoundLabelQuestion" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="What is this sound?" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="Sound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Sound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Sound1" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <KeyboardComponent name="LabelingKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="LabelingKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Welcome4">
      <ImageComponent name="Task4Slide">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Task 4.jpg" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Task4Slide" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.7, 0.9)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="Welcome4Continue">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome4Continue" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Countdown">
      <TextComponent name="No3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="No3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="3" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="No2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="No2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="No1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="No1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Welcome2_2">
      <KeyboardComponent name="Welcome2Continue">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome2Continue" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="Task2Slide">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Task 2.jpg" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Task2Slide" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.7, 0.9)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="Headphone">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('File', 'Headphone/t1_1.wav'), ('Correct', 1)]), OrderedDict([('File', 'Headphone/t1_2.wav'), ('Correct', 1)]), OrderedDict([('File', 'Headphone/t2_1.wav'), ('Correct', 2)]), OrderedDict([('File', 'Headphone/t2_2.wav'), ('Correct', 2)]), OrderedDict([('File', 'Headphone/t3_1.wav'), ('Correct', 3)]), OrderedDict([('File', 'Headphone/t3_2.wav'), ('Correct', 3)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Headphone_check.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="0" valType="code"/>
      <Param name="name" updates="None" val="Headphone" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="HeadphonePlay"/>
    <Routine name="HeadphoneFeedback"/>
    <LoopTerminator name="Headphone"/>
    <LoopInitiator loopType="TrialHandler" name="WordTask">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="WordTask" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Welcome1"/>
    <Routine name="PracticeBegin"/>
    <LoopInitiator loopType="TrialHandler" name="PracticeLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('SoundFile', 'WordMSTPractice/FO_YI_LAY.wav'), ('Type', 'NEW'), ('Correct', 2)]), OrderedDict([('SoundFile', 'WordMSTPractice/FO_YI_LAY.wav'), ('Type', 'OLD'), ('Correct', 1)]), OrderedDict([('SoundFile', 'WordMSTPractice/YO_BU_JAY.wav'), ('Type', 'NEW'), ('Correct', 2)]), OrderedDict([('SoundFile', 'WordMSTPractice/JAY_YO_BU.wav'), ('Type', 'SIMILAR'), ('Correct', 2)]), OrderedDict([('SoundFile', 'WordMSTPractice/FO_YI_LAY.wav'), ('Type', 'OLD'), ('Correct', 1)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="WordMST_practicetrials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="PracticeLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Practice1"/>
    <Routine name="PracticeFeedback"/>
    <LoopTerminator name="PracticeLoop"/>
    <Routine name="Start"/>
    <Routine name="Countdown"/>
    <LoopInitiator loopType="TrialHandler" name="WordMSTLoop">
      <Param name="Selected rows" updates="None" val="0:100" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'WordMST/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'WordMST/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="WordMST_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="WordMSTLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Count1"/>
    <Routine name="MSTWord"/>
    <LoopTerminator name="WordMSTLoop"/>
    <LoopTerminator name="WordTask"/>
    <Routine name="End1"/>
    <LoopInitiator loopType="TrialHandler" name="SoundTask">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SoundTask" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Welcome2_2"/>
    <Routine name="PracticeBegin"/>
    <LoopInitiator loopType="TrialHandler" name="SoundPracticeLoop">
      <Param name="Selected rows" updates="None" val="0:5" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('SoundMST_File', 'SoundMSTPractice/Seagull_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Skid_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Seagull_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Gargle_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Gargle_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 15.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 15.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_I.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_J.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 6.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 17.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_I.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 23.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 20.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 10.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 22.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 19.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 23.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_F.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 21.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 10.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 5.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_I.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_F.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_I.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_J.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="SoundMST_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SoundPracticeLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SoundPractice"/>
    <Routine name="SoundPracticeFeedback"/>
    <LoopTerminator name="SoundPracticeLoop"/>
    <Routine name="MSTSoundStart"/>
    <Routine name="Countdown"/>
    <LoopInitiator loopType="TrialHandler" name="MSTSoundLoop">
      <Param name="Selected rows" updates="None" val="5:133" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('SoundMST_File', 'SoundMSTPractice/Seagull_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Skid_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Seagull_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Gargle_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMSTPractice/Gargle_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'Practice'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 15.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 15.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_I.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_J.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 24.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 6.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 17.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_I.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 23.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 20.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 10.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 22.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 19.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 23.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_F.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 21.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 13.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 8.0)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 14.0)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 12.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 10.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'A'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 16.0)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 5.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'A'), ('Lagsize', 11.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 9.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'A'), ('Lagsize', 7.0)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Whistle_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Trumpet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Buzz.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Printer.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Puff_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Wind_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cow.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Hammer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sleighbells_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Goat_C.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cuckoo_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Faucet_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Sneeze_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Steam.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/IceDrop.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Coin_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/HairDryer_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Camera.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bagpipe.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_D.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Fireworks.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Dog_I.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bird_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airhorn.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_E.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Clap_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Airplane_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chime_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Thunder_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Footsteps_F.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Mosquito_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Slurp.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/PaperRip.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Piano_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Baby_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cup.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_F.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Siren_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Writing_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/CarStart_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/DialTone.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Heartbeat.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cat_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Duck_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Pour_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chomp_C.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Phone_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Typing.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Snore_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Toilet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_C.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Donkey.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Howl.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Horse.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Guitar_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_I.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Elephant_A.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bubbles_B.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Droplet_B.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Chicken_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_A.wav'), ('SoundCorrect', 2), ('Correct2', 3), ('SoundType', 'NEW'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Crow_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/ManWhistle_E.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bullfrog.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Helicopter_A.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cello.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Bowlingpins.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Growl_H.wav'), ('SoundCorrect', 1), ('Correct2', 1), ('SoundType', 'OLD'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Laugh_D.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)]), OrderedDict([('SoundMST_File', 'SoundMST/Cough_J.wav'), ('SoundCorrect', 2), ('Correct2', 2), ('SoundType', 'SIMILAR'), ('Trial', 'B'), ('Lagsize', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="SoundMST_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="MSTSoundLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Count2"/>
    <Routine name="MSTSound"/>
    <Routine name="MSTSoundResponse"/>
    <LoopTerminator name="MSTSoundLoop"/>
    <LoopTerminator name="SoundTask"/>
    <Routine name="End1"/>
    <LoopInitiator loopType="TrialHandler" name="SimilarityRatingTask">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SimilarityRatingTask" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Welcome3"/>
    <Routine name="Countdown"/>
    <LoopInitiator loopType="TrialHandler" name="SimilarityRatingLoop">
      <Param name="Selected rows" updates="None" val="0:83" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Baby_B.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Bird_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Bubbles_B.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/CarStart_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Chime_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Chomp_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Clap_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Coin_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'SoundMST/Cough_J.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'SoundMST/Dog_I.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'SoundMST/Duck_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'SoundMST/Elephant_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'SoundMST/Faucet_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'SoundMST/Footsteps_F.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'SoundMST/Laugh_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'SoundMST/ManWhistle_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'SoundMST/Phone_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'SoundMST/Piano_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'SoundMST/Pour_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'SoundMST/Siren_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'SoundMST/Snore_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'SoundMST/Trumpet_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'SoundMST/Whistle_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Writing_A.wav'), ('Sound2', 'SoundMST/Writing_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Wind_B.wav'), ('Sound2', 'SoundMST/Wind_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Puff_A.wav'), ('Sound2', 'SoundMST/Puff_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Droplet_B.wav'), ('Sound2', 'SoundMST/Droplet_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Growl_H.wav'), ('Sound2', 'SoundMST/Growl_H.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Fireworks.wav'), ('Sound2', 'SoundMST/Fireworks.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cup.wav'), ('Sound2', 'SoundMST/Cup.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/PaperRip.wav'), ('Sound2', 'SoundMST/PaperRip.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Guitar_B.wav'), ('Sound2', 'SoundMST/Guitar_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cow.wav'), ('Sound2', 'SoundMST/Cow.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Buzz.wav'), ('Sound2', 'SoundMST/Buzz.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/DialTone.wav'), ('Sound2', 'SoundMST/DialTone.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Goat_C.wav'), ('Sound2', 'SoundMST/Goat_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Baby_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Bird_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Bubbles_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/CarStart_E.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Chime_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Chomp_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Clap_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Coin_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'SoundMST/Cough_I.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'SoundMST/Dog_H.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'SoundMST/Duck_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'SoundMST/Elephant_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'SoundMST/Faucet_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'SoundMST/Footsteps_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'SoundMST/Laugh_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'SoundMST/ManWhistle.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'SoundMST/Phone_F.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'SoundMST/Piano_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'SoundMST/Pour_F.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'SoundMST/Siren_E.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'SoundMST/Snore_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'SoundMST/Trumpet_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'SoundMST/Whistle_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Thunder_A.wav'), ('Sound2', 'SoundMST/Cuckoo_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Typing.wav'), ('Sound2', 'SoundMST/Bullfrog.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Cello.wav'), ('Sound2', 'SoundMST/Hammer_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Hammer_A.wav'), ('Sound2', 'SoundMST/Crow_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Mosquito_B.wav'), ('Sound2', 'SoundMST/Camera.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Horse.wav'), ('Sound2', 'SoundMST/Bowlingpins.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bowlingpins.wav'), ('Sound2', 'SoundMST/Steam.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Crow_A.wav'), ('Sound2', 'SoundMST/Typing.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Cuckoo_A.wav'), ('Sound2', 'SoundMST/Mosquito_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chicken_A.wav'), ('Sound2', 'SoundMST/Cello.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Airplane_B.wav'), ('Sound2', 'SoundMST/Airplane_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Camera.wav'), ('Sound2', 'SoundMST/Sleighbells_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Sleighbells_B.wav'), ('Sound2', 'SoundMST/Thunder_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Steam.wav'), ('Sound2', 'SoundMST/Toilet_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Toilet_B.wav'), ('Sound2', 'SoundMST/Horse.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bullfrog.wav'), ('Sound2', 'SoundMST/Chicken_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Dog_I.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Chime_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Duck_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/Coin_E.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Baby_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Bird_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Bubbles_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Elephant_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Buzz.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Writing_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Puff_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Heartbeat.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cello.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Steam.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cuckoo_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chicken_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Goat_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Camera.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Mosquito_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bullfrog.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Guitar_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Sleighbells_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cat_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Airhorn.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Donkey.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Slurp.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Hammer_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Howl.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Printer.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Horse.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Airplane_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/HairDryer_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Thunder_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Toilet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cup.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Sneeze_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cow.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Growl_H.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/DialTone.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Typing.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Droplet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Wind_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Fireworks.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bagpipe.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/IceDrop.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/PaperRip.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Crow_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bowlingpins.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Helicopter_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Writing_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/CarStart_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Trumpet_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Piano_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Elephant_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Duck_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Phone_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Snore_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chime_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Faucet_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Baby_B.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bird_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cough_J.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Dog_I.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Laugh_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Pour_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Footsteps_F.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Clap_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Whistle_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Siren_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chomp_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/ManWhistle_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Coin_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bubbles_B.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Similarity_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SimilarityRatingLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Count3"/>
    <Routine name="SimilarityPresentation"/>
    <Routine name="SimlarityResponse"/>
    <LoopTerminator name="SimilarityRatingLoop"/>
    <LoopTerminator name="SimilarityRatingTask"/>
    <Routine name="End1"/>
    <LoopInitiator loopType="TrialHandler" name="LabelingTask">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="LabelingTask" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Welcome4"/>
    <LoopInitiator loopType="TrialHandler" name="SoundLabelLoop">
      <Param name="Selected rows" updates="None" val="83:171" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Baby_B.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Bird_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Bubbles_B.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/CarStart_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Chime_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Chomp_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Clap_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Coin_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'SoundMST/Cough_J.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'SoundMST/Dog_I.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'SoundMST/Duck_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'SoundMST/Elephant_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'SoundMST/Faucet_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'SoundMST/Footsteps_F.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'SoundMST/Laugh_D.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'SoundMST/ManWhistle_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'SoundMST/Phone_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'SoundMST/Piano_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'SoundMST/Pour_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'SoundMST/Siren_A.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'SoundMST/Snore_E.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'SoundMST/Trumpet_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'SoundMST/Whistle_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Writing_A.wav'), ('Sound2', 'SoundMST/Writing_C.wav'), ('PairType', 'SIMILAR')]), OrderedDict([('Sound1', 'SoundMST/Wind_B.wav'), ('Sound2', 'SoundMST/Wind_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Puff_A.wav'), ('Sound2', 'SoundMST/Puff_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Droplet_B.wav'), ('Sound2', 'SoundMST/Droplet_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Growl_H.wav'), ('Sound2', 'SoundMST/Growl_H.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Fireworks.wav'), ('Sound2', 'SoundMST/Fireworks.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cup.wav'), ('Sound2', 'SoundMST/Cup.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/PaperRip.wav'), ('Sound2', 'SoundMST/PaperRip.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Guitar_B.wav'), ('Sound2', 'SoundMST/Guitar_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cow.wav'), ('Sound2', 'SoundMST/Cow.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Buzz.wav'), ('Sound2', 'SoundMST/Buzz.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/DialTone.wav'), ('Sound2', 'SoundMST/DialTone.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Goat_C.wav'), ('Sound2', 'SoundMST/Goat_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Baby_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Bird_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Bubbles_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/CarStart_E.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Chime_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Chomp_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Clap_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Coin_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'SoundMST/Cough_I.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'SoundMST/Dog_H.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'SoundMST/Duck_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'SoundMST/Elephant_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'SoundMST/Faucet_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'SoundMST/Footsteps_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'SoundMST/Laugh_A.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'SoundMST/ManWhistle.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'SoundMST/Phone_F.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'SoundMST/Piano_D.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'SoundMST/Pour_F.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'SoundMST/Siren_E.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'SoundMST/Snore_C.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'SoundMST/Trumpet_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'SoundMST/Whistle_B.wav'), ('PairType', 'SAME')]), OrderedDict([('Sound1', 'SoundMST/Thunder_A.wav'), ('Sound2', 'SoundMST/Cuckoo_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Typing.wav'), ('Sound2', 'SoundMST/Bullfrog.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Cello.wav'), ('Sound2', 'SoundMST/Hammer_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Hammer_A.wav'), ('Sound2', 'SoundMST/Crow_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Mosquito_B.wav'), ('Sound2', 'SoundMST/Camera.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Horse.wav'), ('Sound2', 'SoundMST/Bowlingpins.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bowlingpins.wav'), ('Sound2', 'SoundMST/Steam.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Crow_A.wav'), ('Sound2', 'SoundMST/Typing.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Cuckoo_A.wav'), ('Sound2', 'SoundMST/Mosquito_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chicken_A.wav'), ('Sound2', 'SoundMST/Cello.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Airplane_B.wav'), ('Sound2', 'SoundMST/Airplane_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Camera.wav'), ('Sound2', 'SoundMST/Sleighbells_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Sleighbells_B.wav'), ('Sound2', 'SoundMST/Thunder_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Steam.wav'), ('Sound2', 'SoundMST/Toilet_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Toilet_B.wav'), ('Sound2', 'SoundMST/Horse.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bullfrog.wav'), ('Sound2', 'SoundMST/Chicken_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'SoundMST/Dog_I.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'SoundMST/Chime_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'SoundMST/Duck_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'SoundMST/Coin_E.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'SoundMST/Baby_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'SoundMST/Bird_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'SoundMST/Bubbles_B.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'SoundMST/Elephant_A.wav'), ('PairType', 'DIFFERENT')]), OrderedDict([('Sound1', 'SoundMST/Buzz.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Writing_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/CarStart_E.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Elephant_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Puff_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Trumpet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Heartbeat.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Piano_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cello.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Steam.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cuckoo_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chicken_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Goat_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Duck_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Camera.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Phone_F.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Snore_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Mosquito_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cough_I.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Baby_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chime_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Faucet_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bird_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bullfrog.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Guitar_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Sleighbells_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cat_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Airhorn.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Laugh_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Dog_H.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Donkey.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Slurp.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Hammer_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Howl.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Printer.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Horse.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Airplane_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Pour_F.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/HairDryer_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Thunder_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Toilet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Footsteps_C.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cup.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Sneeze_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cow.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Growl_H.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/DialTone.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Typing.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Clap_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Droplet_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Wind_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Whistle_B.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Fireworks.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bagpipe.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Siren_E.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/IceDrop.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/PaperRip.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chomp_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Crow_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bowlingpins.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/ManWhistle.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Coin_D.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Helicopter_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bubbles_A.wav'), ('Sound2', 'NEW'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Writing_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/CarStart_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Trumpet_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Piano_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Elephant_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Duck_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Phone_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Snore_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chime_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Faucet_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Baby_B.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bird_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Cough_J.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Dog_I.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Laugh_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Pour_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Footsteps_F.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Clap_D.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Whistle_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Siren_A.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Chomp_C.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/ManWhistle_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Coin_E.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)]), OrderedDict([('Sound1', 'SoundMST/Bubbles_B.wav'), ('Sound2', 'SIMILAR'), ('PairType', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Similarity_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SoundLabelLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Count3"/>
    <Routine name="SoundLabeling"/>
    <LoopTerminator name="SoundLabelLoop"/>
    <LoopTerminator name="LabelingTask"/>
    <Routine name="End1"/>
  </Flow>
</PsychoPy2experiment>
