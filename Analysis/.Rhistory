geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5,size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
#ggsave("Plots/smst_acc2.png", dev='png', dpi=300, height=2.5, width= 3.6, units="in")
ggarrange(fig3A, fig3B, nrow=1, ncol=2)
#ggsave("Plots/mst_accAB.png", dev='png', dpi=300, height=2.5, width= 6.1, units="in")
## WMST - Create data frame
w_mst_acc_cont2 = select(orig.mst, Subject, w_Old.Old, w_Old.Lure, w_Old.New) %>%
filter(Subject != 0) %>%
summarise(Old = mean(w_Old.Old), Lure = mean(w_Old.Lure), New = mean(w_Old.New),
Old_ci = confidence_interval(w_Old.Old), Lure_ci = confidence_interval(w_Old.Lure), New_ci = confidence_interval(w_Old.New))
w_mst_acc_cont2$Type = "Controls"
w_mst_acc_bl2 = select(orig.mst, Subject, w_Old.Old, w_Old.Lure, w_Old.New) %>%
filter(Subject == 0) %>%
select(!Subject) %>%
rename(Old = w_Old.Old, Lure = w_Old.Lure, New = w_Old.New) %>%
mutate(Old_ci = 0, Lure_ci = 0, New_ci = 0)
w_mst_acc_bl2$Type = "BL"
w_mst_acc2 = rbind(w_mst_acc_cont2, w_mst_acc_bl2) %>%
select(Old, Lure, New, Type) %>%
pivot_longer(c("Old", "Lure", "New"), names_to = "Condition", values_to = "Accuracy")
w_mst_acc_ci2 = rbind(w_mst_acc_cont2, w_mst_acc_bl2) %>%
select(Old_ci, Lure_ci, New_ci, Type) %>%
pivot_longer(ends_with("ci"), names_to = "Condition2", values_to = "CI") %>%
select(!Type)
w_mst_acc2 = cbind(w_mst_acc2, w_mst_acc_ci2)
## SMST - Create data frame
s_mst_acc_cont2 = select(orig.mst, Subject, s_Old.Old, s_Old.Lure, s_Old.New) %>%
filter(Subject != 0) %>%
summarise(Old = mean(s_Old.Old), Lure = mean(s_Old.Lure), New = mean(s_Old.New),
Old_ci = confidence_interval(s_Old.Old), Lure_ci = confidence_interval(s_Old.Lure), New_ci = confidence_interval(s_Old.New))
s_mst_acc_cont2$Type = "Controls"
s_mst_acc_bl2 = select(orig.mst, Subject, s_Old.Old, s_Old.Lure, s_Old.New) %>%
filter(Subject == 0) %>%
select(!Subject) %>%
rename(Old = s_Old.Old, Lure = s_Old.Lure, New = s_Old.New) %>%
mutate(Old_ci = 0, Lure_ci = 0, New_ci = 0)
s_mst_acc_bl2$Type = "BL"
s_mst_acc2 = rbind(s_mst_acc_cont2, s_mst_acc_bl2) %>%
select(Old, Lure, New, Type) %>%
pivot_longer(c("Old", "Lure", "New"), names_to = "Condition", values_to = "Accuracy")
s_mst_acc_ci2 = rbind(s_mst_acc_cont2, s_mst_acc_bl2) %>%
select(Old_ci, Lure_ci, New_ci, Type) %>%
pivot_longer(ends_with("ci"), names_to = "Condition2", values_to = "CI") %>%
select(!Type)
s_mst_acc2 = cbind(s_mst_acc2, s_mst_acc_ci2)
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Repeat", "Lure", "First")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
#ggsave("Plots/wmst_acc2.png", dev='png', dpi=300, height=2.5, width= 2.5, units="in")
## Visualize SMST
fig3B = ggplot(s_mst_acc2, aes(x=factor(Condition, levels = c("Repeat", "Lure", "First")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
labs(tag = "B", title = "Sound MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5,size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
#ggsave("Plots/smst_acc2.png", dev='png', dpi=300, height=2.5, width= 3.6, units="in")
ggarrange(fig3A, fig3B, nrow=1, ncol=2)
#ggsave("Plots/mst_accAB.png", dev='png', dpi=300, height=2.5, width= 6.1, units="in")
ggsave("Plots/mst_accAB.png", dev='png', dpi=300, height=2.5, width= 6.1, units="in")
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Repeat", "Lure", "First")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
ggsave("Plots/wmst_acc2.png", dev='png', dpi=300, height=2.5, width= 2.5, units="in")
## Visualize SMST
fig3B = ggplot(s_mst_acc2, aes(x=factor(Condition, levels = c("Repeat", "Lure", "First")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
labs(tag = "B", title = "Sound MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5,size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
ggsave("Plots/smst_acc2.png", dev='png', dpi=300, height=2.5, width= 3.6, units="in")
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Repeat", "Lure", "First")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
fig3A
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Old", "Lure", "New")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
scale_x_discrete(lables=c("Repeat", "Lure", "First"))
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Old", "Lure", "New")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
scale_x_discrete(lables=c("Repeat", "Lure", "First")) +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Old", "Lure", "New")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
scale_x_discrete(c("Repeat", "Lure", "First")) +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
fig3A
## Visualize WMST
fig3A = ggplot(w_mst_acc2, aes(x=factor(Condition, levels = c("Old", "Lure", "New")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
scale_x_discrete(labels=c("Repeat", "Lure", "First")) +
labs(tag = "A", title = "Word MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.position = ("none"), plot.title = element_text(hjust = 0.5, size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
fig3A
## Visualize SMST
fig3B = ggplot(s_mst_acc2, aes(x=factor(Condition, levels = c("Old", "Lure", "New")), y=Accuracy, fill=Type)) +
geom_bar(stat="identity", position = position_dodge(), color="black", width = 0.5) +
scale_fill_manual(values= c("red", "white")) +
ylab('Proportion of "Old" responses') +
xlab('Condition') +
scale_x_discrete(labels=c("Repeat", "Lure", "First")) +
labs(tag = "B", title = "Sound MST") +
geom_errorbar(aes(ymin = Accuracy-CI, ymax = Accuracy+CI),
color="black", position=position_dodge(0.5), width = 0.3) +
theme_bw(base_size = 12) +
theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5,size = 11.5),
plot.tag.position = c(0.02, 1)) +
theme(axis.title.y = element_text(size=10)) +
scale_y_continuous(limits = c(0, 1.1), expand = c(0,0))
fig3B
ggsave("Plots/smst_acc2.png", dev='png', dpi=300, height=2.5, width= 3.6, units="in")
fig3A
ggsave("Plots/wmst_acc2.png", dev='png', dpi=300, height=2.5, width= 2.5, units="in")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
library(rlang)
library(lme4) # For doing linear mixed modeling
library(jtools) # For looking at lmer outputs
library(lmerTest) # For looking at lmer outputs
library(Hmisc) # For getting p-values for correlation matrix
library(rstatix) # For running ANOVAs
library(effectsize)
library(emmeans)
library(singcar)
library(forcats)
library(plotrix)
library(ggsignif)
library(car) # Gives an alternative anova tool
library(nlme)
confidence_interval = function(x){ # Function that calculates the 95% confidence interval of distribution x
qnorm(.95) * (sd(x)/sqrt(length(x)))
}
sub_list = unique(rt_cont$Subject)
rt_cont = mutate(rt_cont, Trial = 0)
for(i in sub_list){
count = 1
for(j in 1:(length(rt_cont$Subject)-1)){
if (rt_cont$Subject[j] == i) {
if(rt_cont$Syllable[j] == rt_cont$Syllable[j+1]){
rt_cont$Trial[j] = count
}
else{
rt_cont$Trial[j] = count
count = count+1
}
}
}
}
rt_cont$Trial[3243] = 35
rt_bl = mutate(rt_bl, Trial = 0)
count = 1
for(j in 1:(length(rt_bl$Subject)-1)){
if(rt_bl$Syllable[j] == rt_bl$Syllable[j+1]){
rt_bl$Trial[j] = count
}
else{
rt_bl$Trial[j] = count
count = count+1
}
}
rt_bl$Trial[122] = 36
View(rt_bl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
library(rlang)
library(lme4) # For doing linear mixed modeling
library(jtools) # For looking at lmer outputs
library(lmerTest) # For looking at lmer outputs
library(Hmisc) # For getting p-values for correlation matrix
library(rstatix) # For running ANOVAs
library(effectsize)
library(emmeans)
library(singcar)
library(forcats)
library(plotrix)
library(ggsignif)
library(car) # Gives an alternative anova tool
library(nlme)
orig.rt2 = as.data.frame(read.csv("./RTs_test.csv", fileEncoding="UTF-8-BOM"))
orig.rt2$RT = orig.rt2$RT*1000
orig.rt2 = orig.rt2 %>%
mutate(Trial_n = ifelse(orig.rt2$RT > 1140, Trial-3,
ifelse(orig.rt2$RT > 760, Trial-2,
ifelse(orig.rt2$RT > 380, Trial-1, Trial))))
# SL: Target detection (Reaction time)
rt_cont2 = filter(orig.rt2, Subject != 0)
rt_bl2 = filter(orig.rt2, Subject == 0)
# ------------------------------- Position effect ----------------------------------- #
# BL
# 1. Using anova(lm)(between)
bl_rt2 = lm(RT ~ as.factor(Position) + as.numeric(Trial), data=rt_bl2)
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
View(bl_rt2)
View(bl_rt)
View(rt_bl2)
# ------------------------------- Position effect ----------------------------------- #
# BL
# 1. Using anova(lm)(between)
bl_rt2 = lm(RT ~ as.factor(Position) + as.numeric(Trial_n), data=rt_bl2)
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + as.factor(Position)*as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
summary(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)*as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
summary(cont_rt2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)*as.factor(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)+as.factor(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)+as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position):as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)*as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
# ------------------------------- Position effect ----------------------------------- #
# BL
# 1. Using anova(lm)(between)
bl_rt2 = lm(RT ~ as.factor(Position)*as.numeric(Trial_n), data=rt_bl2)
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
# 2. Using anova_test (within)
View(anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_bl2)))
# Pairwise comparison
emmeans(cont_rt2, list(pairwise ~ as.factor(Position) + as.numeric(Trial)), adjust="bonferroni")
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_cont2))
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position) * as.numeric(Trial_n), random = ~1|Subject, data = rt_cont2))
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_cont2))
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position), random = ~1|Subject, data = rt_cont2))
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_cont))
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)  + (1|Subject), data=rt_cont)
anova(cont_rt2)
3239-3216
View(bl_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) * as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
summary(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) * as.factor(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
summary(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.factor(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) +  (1|Subject), data=rt_cont2)
anova(cont_rt2)
summary(cont_rt2)
anova(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
ggplot(rt_cont2) +
ggplot(rt_cont2)+geom_smooth()
library(ggplot2)
ggplot(rt_cont2)+geom_smooth()
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
library(rlang)
library(lme4) # For doing linear mixed modeling
library(jtools) # For looking at lmer outputs
library(lmerTest) # For looking at lmer outputs
library(Hmisc) # For getting p-values for correlation matrix
library(rstatix) # For running ANOVAs
library(effectsize)
library(emmeans)
library(singcar)
library(forcats)
library(plotrix)
library(ggsignif)
library(car) # Gives an alternative anova tool
library(nlme)
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
geom_smooth()
ggplot(rt_cont2, aes(x=Position, y=RT))+
geom_smooth()
ggplot(rt_bl2, aes(x=Trial_n, y=RT))+
geom_smooth()
ggplot(rt_bl2, aes(x=Trial_n, y=RT))+
geom_bar(stat="identity")
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
geom_bar(stat="identity")
ggplot(rt_cont2, aes(x=Position, y=RT))+
geom_bar(stat="identity")
ggplot(rt_cont2, aes(x=Position, y=RT))+
geom_line(stat="identity")
ggplot(rt_cont2, aes(x=as.factor(Position), y=RT))+
geom_line(stat="identity")
ggplot(rt_cont2, aes(x=Position, y=RT))+
geom_line(stat="identity")
ggplot(rt_cont, aes(x=Position, y=RT))+
geom_line(stat="identity")
orig.rt2 = as.data.frame(read.csv("./RTs_test.csv", fileEncoding="UTF-8-BOM"))
orig.rt2$RT = orig.rt2$RT*1000
orig.rt2 = orig.rt2 %>%
mutate(Trial_n = ifelse(orig.rt2$RT > 1140, Trial-3,
ifelse(orig.rt2$RT > 760, Trial-2,
ifelse(orig.rt2$RT > 380, Trial-1, Trial))))
# SL: Target detection (Reaction time)
rt_cont2 = filter(orig.rt2, Subject != 0)
rt_bl2 = filter(orig.rt2, Subject == 0)
ggplot(rt_cont, aes(x=Trial_n, y=RT))+
geom_line(stat="identity")
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
geom_line(stat="identity")
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
#geom_line(stat="identity")
geom_smooth()
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
#geom_line(stat="identity")
geom_smooth(method="lm")
orig.rt2 = as.data.frame(read.csv("./RTs_test.csv", fileEncoding="UTF-8-BOM"))
orig.rt2$RT = orig.rt2$RT*1000
orig.rt2 = orig.rt2 %>%
mutate(Trial_n = ifelse(orig.rt2$RT > 1140, Trial-3,
ifelse(orig.rt2$RT > 760, Trial-2,
ifelse(orig.rt2$RT > 380, Trial-1, Trial))))
# SL: Target detection (Reaction time)
rt_cont2 = filter(orig.rt2, Subject != 0)
rt_bl2 = filter(orig.rt2, Subject == 0)
# ------------------------------- Position effect ----------------------------------- #
# BL
# 1. Using anova(lm)(between)
bl_rt2 = lm(RT ~ as.factor(Position)*as.numeric(Trial_n), data=rt_bl2)
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
# 2. Using anova_test (within)
View(anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_bl2)))
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Effect size
eta_squared(cont_rt2)
# Pairwise comparison
emmeans(cont_rt2, list(pairwise ~ as.factor(Position) + as.numeric(Trial_n)), adjust="bonferroni")
# 2. Using anova_test (within)
anova(lme(RT ~ as.factor(Position) + as.numeric(Trial_n), random = ~1|Subject, data = rt_cont2))
ggplot(rt_cont2, aes(x=Trial_n, y=RT))+
#geom_line(stat="identity")
geom_smooth(method="lm")
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
cont_rt2 = lmer(RT ~ as.factor(Position) + as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Effect size
eta_squared(cont_rt2)
# Controls
# 1. Using anova(lm) (within)
cont_rt2 = lmer(RT ~ as.factor(Position)*as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
bl_rt2 = lm(RT ~ as.factor(Position)+as.numeric(Trial_n), data=rt_bl2)
anova(bl_rt2)
# Effect size
eta_squared(bl_rt2)
cont_rt2 = lmer(RT ~ as.factor(Position)+as.numeric(Trial_n) + (1|Subject), data=rt_cont2)
anova(cont_rt2)
# Effect size
eta_squared(cont_rt2)
# Effect size
View(eta_squared(cont_rt2))
library(dplyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
update.packages("dplyr")
remove.packages("dplyr")
anova(bl_rt2)
